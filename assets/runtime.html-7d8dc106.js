import{_ as i,r as o,o as y,c as d,b as a,a as s,w as t,d as n,e}from"./app-7eaa5ff0.js";const u={},m=s("h1",{id:"_2-1-creacion-rapida-de-procesos-con-java-con-runtime",tabindex:"-1"},"2.1. Creación rápida de procesos con Java con Runtime",-1),E={class:"table-of-contents"},v=s("h2",{id:"_2-1-1-creacion-rapida-de-procesos",tabindex:"-1"},"2.1.1. Creación rápida de procesos",-1),b=s("p",null,"La clase java.lang.Runtime se usa principalmente para interactuar con el JRE de Java. Esta clase proporciona métodos para lanzar procesos, llamar al recolector de basura (Garbage Collector), saber la cantidad de memoria disponible y libre, etc.",-1),A={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Runtime.html",target:"_blank",rel:"noopener noreferrer"},D=s("p",null,[n("Cada aplicación en Java tiene acceso a una única instancia de "),s("em",null,"java.lang.Runtime"),n(" a través del método "),s("code",null,"Runtime.getRuntime()"),n(" que devuelve la instancia "),s("strong",null,"singleton"),n(" de la clase Runtime.")],-1),g={class:"custom-container question"},C=s("p",{class:"custom-container-title"},"Patrones de diseño: Singleton",-1),q=s("p",null,"¿Qué son los patrones de diseño? ¿Qué es y para qué se usa el patrón de diseño singleton?",-1),F=s("p",null,"Investiga cómo realizar una clase que siga el patrón de diseño singleton.",-1),h={href:"https://refactoring.guru/es/design-patterns/java",target:"_blank",rel:"noopener noreferrer"},f=e(`<p>El método que nos interesa a nosotros para la creación de procesos es</p><blockquote><p>public Process exec(String command) throws IOException</p></blockquote><p>Veamos un ejemplo sencillo de uso de este método</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws IOException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Launch notepad app</span></span>
<span class="line"><span style="color:#24292E;">    Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;notepad.exe&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// This way always works</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// String separator = System.getProperty(&quot;file.separator&quot;);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Runtime.getRuntime()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//    .exec(&quot;c:&quot;+separator+&quot;windows&quot;+separator+&quot;notepad.exe&quot;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// This way used to work (UNIX style paths)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Runtime.getRuntime().exec(&quot;c:/windows/notepad.exe&quot;);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Se puede observar que en el parámetro que pasamos al método <code>exec</code> indicamos el programa que queremos ejecutar. En este caso, como el <em>notepad</em> se encuentra en el PATH del sistema, no es necesario indicar la ruta donde se encuentra el programa. En otro caso, sí tendríamos que hacerlo.</p><div class="pagebreak"></div><h2 id="_2-1-2-propiedades-del-sistema-y-comandos-del-sistema" tabindex="-1">2.1.2 Propiedades del sistema y comandos del sistema</h2><p>Si tenemos pensado desarrollar aplicaciones que funcionen en diferentes SO tendremos que enfrentarnos a la problemática del funcionamiento diferente de los distintos SO.</p><p>Vamos a ver algunos ejemplos que pueden servir como guía para otros problemas similares a los expuestos.</p><div class="custom-container danger"><p class="custom-container-title">File separator</p><p>Para indicar las rutas en un sistema los sistemas UNIX emplean el caracter <strong>/</strong> como separador mientras que los sistemas Windows usan el caracter <strong>\\</strong> . En resumen, / en *X y \\ en Windows.</p><p>¿Cómo podemos hacer entonces que nuestras aplicaciones sean independientes del SO en el que se ejecutan?</p><p>Para este tipo de cuestiones vamos a utilizar de forma recurrente las propiedades del sistema mediante <code>System.getProperty(String propName)</code>. Estas propiedades se configuran con el propio sistema operativo, aunque las podemos modificar usando los parámetros de ejecución de la máquina virtual</p><blockquote><p>String separator = System.getProperty(&quot;file.separator&quot;);</p></blockquote><p>o</p><blockquote><p>-Dfile.separator</p></blockquote><p>Aunque siempre es una buena práctica usar el caracter <strong>/</strong> en las rutas ya que Java es capaz de convertirlas al sistema en el que se ejecuta.</p></div><p>Si lo que queremos es ejecutar un comando del SO, tenemos que hacerlo, al igual que si lo hacemos manualmente, a través del shell del sistema, donde volvemos a encontrar la dicotomía entre sistemas UNIX y sistemas Windows.</p><p>Vamos a ver el código que, a través de las propiedades del sistema, nos permite obtener un listado de los archivos existentes en la carpeta personal del usuario.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Primero obtenemos la carpeta del usuario</span></span>
<span class="line"><span style="color:#24292E;">String homeDirectory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;user.home&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isWindows </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;os.name&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">toLowerCase</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;windows&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isWindows) {</span></span>
<span class="line"><span style="color:#24292E;">    Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cmd.exe /c dir %s&quot;</span><span style="color:#24292E;">, homeDirectory));</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sh -c ls %s&quot;</span><span style="color:#24292E;">, homeDirectory));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">Modo shell no interactivo</p><p>Como se puede observar, tanto para Windows como UNIX se ha usado el modificador <strong>c</strong> del comando. Este modificador indica que se abra un shell, se ejecute el comando recibido y se cierre el proceso del shell.</p></div><p>A continuación podemos ver un ejemplo de respuesta ante la pulsación de un botón, en una app gráfica, paraabrir una página en el navegador. Tenemos cómo se haría en sistemas *X y comentado una de las formas de hacerlo en Windows.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// Calling app example</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mouseClicked</span><span style="color:#24292E;">(MouseEvent e) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Launch Page</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Linux version</span></span>
<span class="line"><span style="color:#24292E;">    Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;open http://localhost:8153/go&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Windows version</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Runtime.getRuntime().exec(&quot;explorer http://localhost:8153/go&quot;);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">e1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Don&#39;t care</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container question"><p class="custom-container-title">System properties</p><p>Vamos a crear nuestro primer programa en Java, que no va a ser tan sencillo como pueda parecer</p><p>Usando métodos de las clases System y Runtime hacer un programa que muestre</p><ul><li>todas las propiedades establecidas en el sistema operativo y sus valores.</li><li>memoria total, memoria libre, memoria en uso y los procesadores disponibles</li></ul><p>Mira los métodos que proporcionan las clases Runtime y system. Intenta obtener una lista u otra estructura de datos que te permita recorrer las propiedades para ir mostrando sus nombres y valores.</p></div><details class="custom-container details"><summary>Solución propuesta para la actividad anterior</summary><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">long</span><span style="color:#24292E;"> freeMemory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">freeMemory</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">long</span><span style="color:#24292E;"> availableMemory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">totalMemory</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">long</span><span style="color:#24292E;"> usedMemory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> availableMemory </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> freeMemory;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*** Runtime.getRuntime() usage ***/</span></span>
<span class="line"><span style="color:#6A737D;">// Show system information</span></span>
<span class="line"><span style="color:#6A737D;">// Memory will be shown in MBytes formatted with 2-decimal places</span></span>
<span class="line"><span style="color:#24292E;">DecimalFormat megabytes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DecimalFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#.00&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Available memory in JVM(Mbytes): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        megabytes.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">double</span><span style="color:#24292E;">)availableMemory</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Free memory in JVM(Mbytes): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        megabytes.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">double</span><span style="color:#24292E;">)freeMemory</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Used memory in JVM(Mbytes): &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        megabytes.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">((</span><span style="color:#D73A49;">double</span><span style="color:#24292E;">)usedMemory</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">)));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;Processors in the system: &quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Runtime.</span><span style="color:#6F42C1;">getRuntime</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">availableProcessors</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*** System.getProperties() usage ***/</span></span>
<span class="line"><span style="color:#6A737D;">// Show each pair of property:value from System properties</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1st. As a lambda expression using anonymous classes</span></span>
<span class="line"><span style="color:#24292E;">System.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((k,v) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(k </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; =&gt; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> v));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2nd. As a Map.entrySet </span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Map.Entry&lt;</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt; entry </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">entrySet</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    Object key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> entry.</span><span style="color:#6F42C1;">getKey</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    Object val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> entry.</span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&gt; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; =&gt; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> val);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3rd. As a Map.keySet</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Object key </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toArray</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&gt;&gt; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">System.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(key.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Other methods found by students, based on a Properties object methods.</span></span>
<span class="line"><span style="color:#24292E;">Properties prop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (String propName</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> prop.</span><span style="color:#6F42C1;">stringPropertyNames</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(propName </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(propName));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#6A737D;">// Or directly to the console using </span></span>
<span class="line"><span style="color:#24292E;">prop.</span><span style="color:#6F42C1;">list</span><span style="color:#24292E;">(System.out);</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,18),_={class:"custom-container info"},S=s("p",{class:"custom-container-title"},"Formato numérico",-1),R=s("p",null,"Todos los lenguajes de programación tienen varias formas de mostrar la información al usuario. Cuando se trata de mostrar información a a través de la consola, tenemos un par de alternativas para formatear la información numérica.",-1),N={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/DecimalFormat.html",target:"_blank",rel:"noopener noreferrer"},j=e(`<p>Si usamos la clase NumberFormat o cualquiera de sus descendientes podemos controlar con bastante precisión cómo se verán los números, usando patrones.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">DecimalFormat numberFormat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DecimalFormat</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#.00&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// Si usamos hashes en vez de ceros permitimos que .30 se vea como 0.3</span></span>
<span class="line"><span style="color:#6A737D;">// (los dígitos adicionales son opcionales)</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(numberFormat.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(number));</span></span>
<span class="line"></span></code></pre></div>`,2),x={href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Formatter.html",target:"_blank",rel:"noopener noreferrer"},k=e(`<p>Heredado de la sintaxis de la función printf de C, podemos utilizar la sintaxis de java.util.Formatter para configurar cómo será visualizada la información.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">$%10.2f&quot;</span><span style="color:#24292E;">,shippingCost);</span></span>
<span class="line"><span style="color:#6A737D;">// % rellena con hasta 10 posiciones los números</span></span>
<span class="line"><span style="color:#6A737D;">// para justificarlos a la derchan.</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%n$%.2f&quot;</span><span style="color:#24292E;">,shippingCost);</span></span>
<span class="line"></span></code></pre></div>`,2),B=e(`<div class="custom-container info"><p class="custom-container-title">Usando colores en la salida por consola</p><p>Hay una forma sencilla de mostrar información por consola usando diferentes colores. Os dejo un ejemplo de código con la definición de algunos colores y la forma de usarlos.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UsarColoresEnConsola</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_RESET </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[0m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_BLACK </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[30m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_RED </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[31m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_GREEN </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[32m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_YELLOW </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[33m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_BLUE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[34m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_PURPLE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[35m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_CYAN </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[36m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_WHITE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[37m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_BLACK_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[40m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_RED_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[41m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_GREEN_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[42m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_YELLOW_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[43m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_BLUE_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[44m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_PURPLE_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[45m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_CYAN_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[46m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String ANSI_WHITE_BACKGROUND </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\u</span><span style="color:#032F62;">001B[47m&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(ANSI_GREEN </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ANSI_WHITE_BACKGROUND </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hola&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ANSI_BLUE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ANSI_YELLOW_BACKGROUND </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; Adiós&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ANSI_RESET);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span></code></pre></div></div>`,1);function I(w,P){const r=o("DownloadPDF-component"),c=o("DocumentCover-component"),p=o("router-link"),l=o("ExternalLinkIcon");return y(),d("div",null,[a(r),a(c,{titulo:"2.1. Creación de procesos con Java con Runtime"}),m,s("nav",E,[s("ul",null,[s("li",null,[a(p,{to:"#_2-1-1-creacion-rapida-de-procesos"},{default:t(()=>[n("2.1.1. Creación rápida de procesos")]),_:1})]),s("li",null,[a(p,{to:"#_2-1-2-propiedades-del-sistema-y-comandos-del-sistema"},{default:t(()=>[n("2.1.2 Propiedades del sistema y comandos del sistema")]),_:1})])])]),v,b,s("blockquote",null,[s("p",null,[s("a",A,[n("Especificación java.lang.Runtime"),a(l)])])]),D,s("div",g,[C,q,F,s("p",null,[s("a",h,[n("Refactoring.Guru Patrones de diseño"),a(l)])])]),f,s("div",_,[S,R,s("ul",null,[s("li",null,[s("a",N,[n("NumberFormat"),a(l)])])]),j,s("ul",null,[s("li",null,[s("a",x,[n("System.out.printf"),a(l)])])]),k]),B])}const M=i(u,[["render",I],["__file","runtime.html.vue"]]);export{M as default};
