import{_ as t,r,o as i,c,a as e,b as a,w as n,d as s,e as p}from"./app-7eaa5ff0.js";const d="/apuntes/assets/architecture-1f3dd6e7.png",u={},m=e("h1",{id:"instalacion-y-configuracion-del-entorno-vuepress-v2",tabindex:"-1"},"Instalación y configuración del entorno Vuepress v2",-1),g={class:"table-of-contents"},y=e("h2",{id:"_1-arquitectura",tabindex:"-1"},"1. Arquitectura",-1),b=e("p",null,"Para la publicación y mantenimiento de los apuntes utilizo una organización de GitHub. Dentro de dicha organización creo dos repositorios.",-1),h={href:"https://github.com/psp2dam",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,[e("p",null,[s("Dentro de esta organización, creo un repositorio privado (psp_sources2022) al que se le puede dar el nombre que queramos. "),e("code",null,"En mi caso, el poner el sufijo 2022 es porque para ese curso cambié de VuePress 1 a VuePress 2 y la organización del contenido, del repositorio y la configuración de VuePress era totalmente diferente al anterior ("),e("strong",null,"psp_sources"),e("code",null,")")])],-1),_=e("strong",null,"psp_pages",-1),f={href:"https://psp2dam.github.io/psp_pages",target:"_blank",rel:"noopener noreferrer"},q=p('<blockquote><p>Posteriormente en VuePress se tiene que configurar esa ruta de acceso. Esto se hace así para poder acceder a varios repositorios con el mismo dominio, aunque también se podría usar el dominio de la organización para un único repositorio.</p></blockquote><p>Los apuntes se crean en formato markdown. Para la edición utilizo VSCode con el plugin <code>Markdown Preview Enhance</code> que añade muchas funcionalidades extra al formato markdown básico y que son compatibles en su gran mayoría con el formato markdown que VuePress acepta.</p><p><img src="'+d+'" alt="Arquitectura de apuntes"></p><h3 id="_1-1-entorno-de-desarrollo" tabindex="-1">1.1 Entorno de desarrollo</h3><p>El entorno que utilizo para la creación y prueba de los apuntes está basado en el uso de un entorno de desarrollo (Node + VuePress 2) asociado a un repositorio privado.</p><p>En este repositorio sólo se guarda el contenido de la carpeta docs, ya que la carpeta node_modules ocupa mucho y se puede instalar en cualquier equipo de forma sencilla tal y como se explicará más adelante.</p><p>Aquí no hace falta instalar nada adicional, ya que el propio VuePress, cuando ejecutamos el script <code>npm run docs:dev</code> levanta un servidor web de pruebas (en el puerto 8080) en modo <strong>&quot;hot reload&quot;</strong>, de forma que nos permite ir viendo los cambios que hacemos en los apuntes.</p><h3 id="_1-2-entorno-de-pruebas" tabindex="-1">1.2 Entorno de pruebas</h3><p>Por otro lado, cuando se compila todo el entorno, ejecutando el script <code>npm run docs:build</code>, se compilan todos los fuentes, se generan todos los CSS, js, se recopilan las imágenes, iconos, etc y se publica todo el sitio, ahora ya convertido a HTML, en un servidor http local (XAMPP puerto 80), en un directorio raíz que tenga en el primer nivel la ruta que hemos configurado para el repositorio público, en nuestro caso <em>psp_pages</em>.</p>',9),E={href:"http://psp/psp_pages",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"_1-3-entorno-de-produccion",tabindex:"-1"},"1.3 Entorno de producción",-1),F=e("p",null,"Ese directorio (psp_pages) es el que está asociado con el repositorio público de GitHub que está configurado como sitio web accesible de forma pública.",-1),P={href:"https://psp2dam.github.io/psp_pages",target:"_blank",rel:"noopener noreferrer"},x=p('<blockquote><p>Cabe destacar que los apuntes generados se pueden mostrar en una estructura en varios idiomas, por lo que la plataforma es ideal para publicar contenido en módulos plurilingües.</p></blockquote><div class="pagebreak"></div><h2 id="_2-instalacion-del-entorno" tabindex="-1">2. Instalación del entorno</h2><p>Requisitos software:</p><ul><li><p>Tener instalado algún cliente de Git (GitHub Desktop, Git cli, el que trae incorporado VSCode)</p></li><li><p>Tener instalado node.js en en nuestro equipo</p><blockquote><p>Añadir la carpeta <code>usr\\bin</code> del cliente Git que hayamos instalado al PATH del sistema (en Windows) para poder usar los comandos de GNU en los scripts, permitiendo así no tener que cambiar comandos entre Windows/Mac/Linux</p></blockquote></li><li><p>En una carpeta de nuestro equipo, nos hacemos un clone del repositorio privado (vacío o ya con información previamente cargada). Yo la he creado en <code>apuntes/psp_sources2022</code>)</p></li></ul>',5),C={href:"https://v2.vuepress.vuejs.org/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"},A=p(`<div class="language-bash" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> npm init --</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> Necesitamos contestar a una serie de preguntas</span></span>
<span class="line"><span style="color:#6F42C1;">package</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">psp_sources</span></span>
<span class="line"><span style="color:#6F42C1;">version:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.98</span><span style="color:#032F62;">.1-beta</span></span>
<span class="line"><span style="color:#6F42C1;">description:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Apuntes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">del</span><span style="color:#24292E;"> </span><span style="color:#032F62;">módulo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">PSP</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">º</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DAM</span></span>
<span class="line"><span style="color:#6F42C1;">entry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">point:</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#005CC5;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command:</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repository:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/psp2dam/psp_sources2022.git</span></span>
<span class="line"><span style="color:#6F42C1;">keywords:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">PSP</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Procesos</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Servicios</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Java</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DAM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Balmis</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Programación</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Sockets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Seguridad</span></span>
<span class="line"><span style="color:#6F42C1;">Author:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Vicente</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Martínez</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Martínez</span></span>
<span class="line"><span style="color:#6F42C1;">license:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CC-BY-NC-SA-4.0</span></span>
<span class="line"></span></code></pre></div><p>y depués ejecutamos</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> npm install -D vuepress@next</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>El comando anterior descargará e instalará todos los módulos y dependencias necesarios para una instalación básica de VuePress. El código de los módulos descargados quedará dentro de la carpeta <code>node_modules</code>.</p><p>Además, la instalación creará dos archivos:</p><ul><li>package.json</li><li>package.json.lock</li></ul><p>Si en vez de empezar de cero, hemos hecho un clone de un repositorio que ya tiene contenido, ejecutando</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> npm -i</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>descargará todos los módulos, respetando en este caso la configuración de los archivos <code>package.json</code> y <code>package.json.lock</code> existentes</p><div class="custom-container tip"><p class="custom-container-title">Consejo</p><p>Estos archivos varían en función de los directorios y del SO en el que se ejecuten. Es por eso por lo que no los incluyo en el repositorio (añadidos al .gitignore).</p><p>Por contra, sí incluyo una copia de estos archivos para cada uno de los equipos en los que trabajo, por ejemplo <code>package.json.laptop</code> o <code>package.json.desktop</code>.</p></div><p>Para poder lanzar el entorno de desarrollo, generar y copiar el sitio web en el entorno de pruebas y generar los PDF de cada una de las páginas del sitio, tenemos que editar el archivo package.json y añadir los siguientes comandos a la sección de scripts</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#032F62;">&quot;export-pdf&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;press-export-pdf export docs --config docs/.vuepress/vuepress-pdf.config.ts --outFile book.pdf --urlOrigin http://psp:80/psp_pages/ --debug &amp;&amp; cp -pr docs/.vuepress/.temp/pdf/?.*.pdf C:/Users/Vicente/Servidor/xampp/htdocs_apuntes/psp/psp_pages/pdf/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">&quot;docs:dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vuepress dev docs --open&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#032F62;">&quot;docs:build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;vuepress build docs &amp;&amp; cp -pr docs/.vuepress/dist/* C:/Users/Vicente/Servidor/xampp/htdocs_apuntes/psp/psp_pages/&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Directorios en función de nuestro entorno</p><p>Hay que ajustar los directorios a los de nuestro entorno de desarrollo y pruebas</p></div><ul><li><p>El comando docs:dev es el que lanza el entorno de desarrollo de VuePress, tras ejecutar</p><blockquote><p>npm run docs:dev</p></blockquote><p>levantando un servidor web en modo <code>hot reload</code> en la url http://localhost:8080/psp_pages <em>(la ruta, cuando la hayamos configurado)</em>.</p></li><li><p>El comando docs:build se encarga de compilar todos los archivos .md y convertirlos en .html creando una \`SPA (Single Page Application), en resumen, creando toda la estructura de un sitio web.</p><p>Esa estructura la crea en el directorio docs/.vuepress/dist/, así que lo que se hace es copiar todo su contenido en la carpeta del servidor de pruebas (htdocs_apuntes/psp/psp_pages).</p><p>Dicho servidor de pruebas estará configurado para tener como raiz del VirtualHost (psp) el directorio htdocs_apuntes/psp --&gt; http://psp/psp_pages</p></li><li><p>El comando export-pdf utiliza un plug-in de VuePress que genera un PDF con el contenido de todas las páginas del sitio.</p><div class="custom-container danger"><p class="custom-container-title">plug-in modificado</p><p>El plug-in lo he modificado para que genere un PDF por cada página, en vez de un PDF con todas las páginas.</p><p>Además, este plug-in utiliza los estilos de impresión definidos en los CSS y un archivo con la configuración de las cabeceras, pies de página, tamaño de página, escala del texto, etc <code>docs/.vuepress/vuepress-config.ts</code>.</p><p>Por otra parte, como lo que quiero convertir a PDF son los .html, lo lanzo pasándole como URL la del servidor de pruebas.</p><p>Y finalmente, los PDF generados en <code>docs/.vuepress/.temp/pdf/</code> los copio en la carpeta correspondiente del servidor de pruebas <code>htdocs_apuntes/psp/psp_pages/pdf/</code>.</p></div></li></ul><p>Una vez comprobado, en el servidor de pruebas, que todos los html son correctos y que los PDF están bien enlazados, sólo quedaría publicar los cambios.</p><ul><li><p>Publicar cambios en los fuentes</p><p>Desde la carpeta <code>apuntes/psp_sources2022</code> hago</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git add </span><span style="color:#005CC5;">.</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git commit -m </span><span style="color:#032F62;">&quot;Mensaje del commit&quot;</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git push</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Publicar los cambios en los apuntes</p><p>Desde la carpeta <code>htdocs_apuntes/psp/psp_pages</code> hago</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git add </span><span style="color:#005CC5;">.</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git commit -m </span><span style="color:#032F62;">&quot;Mensaje del commit&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git push</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="pagebreak"></div><h2 id="no-hacer-caso-a-partir-de-aqui" tabindex="-1">No hacer caso a partir de aquí...</h2><ul><li>Probando funcionalidades <em>básicas</em> de <code>Markdown</code></li><li>Como las <strong>listas</strong> y otros estilos</li></ul><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Código sin numeración inicial</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;El valor de la variable es &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> a);</span></span>
<span class="line"></span></code></pre></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Código con numeración y resaltado de líneas (la segunda)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;El valor de la variable es &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> a);</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function D(j,z){const o=r("router-link"),l=r("ExternalLinkIcon");return i(),c("div",null,[m,e("nav",g,[e("ul",null,[e("li",null,[a(o,{to:"#_1-arquitectura"},{default:n(()=>[s("1. Arquitectura")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#_1-1-entorno-de-desarrollo"},{default:n(()=>[s("1.1 Entorno de desarrollo")]),_:1})]),e("li",null,[a(o,{to:"#_1-2-entorno-de-pruebas"},{default:n(()=>[s("1.2 Entorno de pruebas")]),_:1})]),e("li",null,[a(o,{to:"#_1-3-entorno-de-produccion"},{default:n(()=>[s("1.3 Entorno de producción")]),_:1})])])]),e("li",null,[a(o,{to:"#_2-instalacion-del-entorno"},{default:n(()=>[s("2. Instalación del entorno")]),_:1})]),e("li",null,[a(o,{to:"#no-hacer-caso-a-partir-de-aqui"},{default:n(()=>[s("No hacer caso a partir de aquí...")]),_:1})])])]),y,b,e("blockquote",null,[e("p",null,[s("Para el caso de PSP (2º DAM) tengo la organización "),e("a",h,[s("https://github.com/psp2dam"),a(l)])])]),e("ul",null,[v,e("li",null,[e("p",null,[s("Por otro lado, creo un repositorio público ("),_,s("). Aquí el nombre sí tiene importancia porque es la ruta que va a tener el dominio asociado a la organización. Este repositorio se publica en GitHub Pages bajo el dominio psp2dam.github.io, asociándolo a la rama principal del repositorio, dejándola como raíz del sitio web y pudiendo así acceder al contenido del repositorio como "),e("a",f,[s("https://psp2dam.github.io/psp_pages"),a(l)]),s('. Si el repositorio se hubiese llamado "apuntes", entonces la ruta sería /apuntes.')])])]),q,e("p",null,[s('En el servidor Apache lo que hago es configurar un VirtualHost que apunte a ese directorio. Y configuro un hostname "psp" (etc/hosts) para probarlo. Una vez configurado todo, se puede acceder al entorno de pruebas en la url '),e("a",E,[s("http://psp/psp_pages"),a(l)])]),k,F,e("p",null,[s('Una vez probado, y previa creación de los PDF (que se generan a partir de los HTML que hay en este servidor), ya se puede hace un commit al repositorio público (psp_pages) Ese sitio web que se publica en el repositorio público es la puesta en "producción" de los apuntes '),e("a",P,[s("https://psp2dam.github.io/psp_pages"),a(l)]),s(" y al que le damos acceso a los alumnos.")]),x,e("p",null,[s("En el caso de que el repositorio esté vacío y tengamos que hacer la instalación y configuración del entorno por primera vez, desde una consola de comandos nos ubicamos dentro de esa carpeta y, siguiendo la "),e("a",C,[s("guía de inicio de VuePress 2"),a(l)]),s(" ejecutamos")]),A])}const V=t(u,[["render",D],["__file","InstallationNotes.html.vue"]]);export{V as default};
