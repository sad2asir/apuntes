import{_ as i,r as e,o as y,c as u,b as n,a as s,w as t,d as a,e as p}from"./app-d6694eca.js";const d={},h=s("h1",{id:"_2-4-annex-i-curl",tabindex:"-1"},"2.4 Annex I - Curl",-1),b={class:"table-of-contents"},m=p('<p>Whether it’s testing the output of a REST API on development or before deploying it to production, simply fetching a response from a website (for instance, to check it’s not down), or getting response times from a site / API Curl is practically omnipresent.</p><p>Curl is a command-line tool that allows us to do HTTP requests from shell. This is its main use.</p><div class="custom-container info"><p class="custom-container-title">INFO</p><p>The tool was about uploading and downloading data specified with a URL. It was a client-side program (the &#39;c&#39;), a URL client, and would show the data (by default). So &#39;c&#39; for Client and URL: cURL.</p><p>Most of us pronounce &quot;curl&quot; with an initial k sound, just like the English word curl. It rhymes with words like girl.</p><p>But it can also be spelled as c-URL which means see-URL, that is also a good definition about what the tool does.</p></div><p>Curl supports protocols that allow &quot;data transfers&quot; in either or both directions. It supports protocols which have a &quot;URI format&quot; and are described in an RFC, as curl works primarily with URLs (URIs really) as the input key that specifies the transfer.</p><p>Curl actually supports these protocols:</p><blockquote><p>DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP.</p></blockquote><h2 id="_2-4-1-get-curl" tabindex="-1">2.4.1 Get curl</h2><p>curl is totally free, open and available. There are numerous ways to get it and install it for most operating systems and architecture. Some operating systems include curl by default.</p>',8),E={href:"http://curl.se",target:"_blank",rel:"noopener noreferrer"},g=s("li",null,[a("Linux (Ubuntu / Debian). curl is installed by default. Anyway, you can add with the APT package manager "),s("blockquote",null,[s("p",null,"apt install curl")])],-1),F={href:"http://curl.se/windows",target:"_blank",rel:"noopener noreferrer"},w=s("li",null,[a("MacOS comes with the curl tool bundled with the operating system since many years. If you want to upgrade to the latest version shipped by the curl project, we recommend installing homebrew (a macOS software package manager) "),s("blockquote",null,[s("p",null,"brew install curl")])],-1),C=p(`<h2 id="_2-4-2-calling-a-get-method" tabindex="-1">2.4.2 Calling a GET method</h2><p>In its most basic form, a curl command will look like this:</p><div class="language-bash" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.net.net</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">head&gt;&lt;title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">Document Moved</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/title&gt;&lt;/head</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">body&gt;&lt;h</span><span style="color:#D73A49;">1&gt;</span><span style="color:#24292E;">Object Moved</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/h</span><span style="color:#D73A49;">1&gt;</span><span style="color:#24292E;">This document may be found </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">a HREF=</span><span style="color:#032F62;">&quot;http://net.net&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">here</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/a&gt;&lt;/body</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br></div></div><p>The default behavior for curl is to invoke an HTTP GET method on the given URL. This way, the program’s output for that command will be the whole HTTP response’s body (in this case, HTML which will be written as given on stdout.</p><p>Many times we’ll wish to direct the response’s contents into a file. This is done with the <code>-o (--output)</code> argument, like this:</p><blockquote><p>curl -o output.html www.net.net</p><p>// Equivalent to</p><p>curl www.net.net &gt; output.html</p></blockquote><p>The URL must be in the last place, but optionally, you can specify the URL of the site you wish to call curl on with a <code>-s (--silent) </code>argument , allowing you to change the order of your arguments.</p><p>curl -s http://www.net.net -o output.html</p><p>In the previous example we are not getting the desired resource, because it has been moved or redirected to another URI. Using the <code>-L (--location)</code> mode, we can follow redirects and get the destination resource</p><div class="language-bash" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.dataden.tech</span></span>
<span class="line"><span style="color:#6F42C1;">Redirecting</span></span>
<span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-L</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.dataden.tech</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">html&gt;&lt;head&gt;&lt;title</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">Loading...</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=</span><span style="color:#032F62;">&#39;text/javascript&#39;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">window.location.replace(</span><span style="color:#6F42C1;">&#39;http://www.dataden.tech/?js=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJKb2tlbiIsImV4cCI6MTYzMzM4OTE3OSwiaWF0IjoxNjMzMzgxOTc5LCJpc3MiOiJKb2tlbiIsImpzIjoxLCJqdGkiOiIycWxmMGdkZmg2YWlzaHMxdjgwdWx0aTQiLCJuYmYiOjE2MzMzODE5NzksInRzIjoxNjMzMzgxOTc5NzgzNzQ1fQ.y5LwDoSoZCpe2tzro_FbX7cSGIw4nx1XweNBqjpLXoo&amp;sid=da601018-2557-11ec-a001-58f389072b17&#39;</span><span style="color:#24292E;">);</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/script&gt;&lt;/body&gt;&lt;/html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-L</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.net.net</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">head&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">title&gt;NET.NET</span><span style="color:#24292E;"> [The </span><span style="color:#032F62;">first</span><span style="color:#24292E;"> </span><span style="color:#032F62;">domain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Internet!]</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">/titl</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/head&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">body&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;!</span><span style="color:#6F42C1;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Begin:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Google</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Analytics</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">script&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  (function(</span><span style="color:#6F42C1;">i,s,o,g,r,a,m</span><span style="color:#24292E;">){</span><span style="color:#6F42C1;">i[</span><span style="color:#6F42C1;">&#39;GoogleAnalyticsObject&#39;</span><span style="color:#6F42C1;">]</span><span style="color:#24292E;">=r;i[r]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">i[r]</span><span style="color:#24292E;">||</span><span style="color:#6F42C1;">function</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">                  (</span><span style="color:#6F42C1;">i[r].q</span><span style="color:#24292E;">=i[r].q</span><span style="color:#D73A49;">||</span><span style="color:#24292E;">[])</span><span style="color:#6F42C1;">.push(arguments</span><span style="color:#24292E;">)}</span><span style="color:#6F42C1;">,i[r].l</span><span style="color:#24292E;">=1*new </span><span style="color:#032F62;">Date</span><span style="color:#24292E;">();a</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">s.createElement</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">o</span><span style="color:#24292E;">)</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">                  m</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">s.getElementsByTagName</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">o</span><span style="color:#24292E;">)</span><span style="color:#032F62;">[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">]</span><span style="color:#24292E;">;</span><span style="color:#6F42C1;">a.async</span><span style="color:#24292E;">=1;</span><span style="color:#6F42C1;">a.src</span><span style="color:#24292E;">=g;</span><span style="color:#6F42C1;">m.parentNode.insertBefore(a,m</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                  })(</span><span style="color:#6F42C1;">window,document,</span><span style="color:#6F42C1;">&#39;script&#39;</span><span style="color:#6F42C1;">,</span><span style="color:#6F42C1;">&#39;//www.google-analytics.com/analytics.js&#39;</span><span style="color:#6F42C1;">,</span><span style="color:#6F42C1;">&#39;ga&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#6F42C1;">ga(</span><span style="color:#6F42C1;">&#39;create&#39;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;UA-32196-28&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#6F42C1;">ga(</span><span style="color:#6F42C1;">&#39;send&#39;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;pageview&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/script&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;!</span><span style="color:#6F42C1;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">End:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Google</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Analytics</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">center&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">font</span><span style="color:#24292E;"> </span><span style="color:#032F62;">face=&quot;impact, Arial, Helvetica, sans-serif&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size=&quot;14&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#6F42C1;">NET.NET</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/font&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /&gt;&lt;</span><span style="color:#032F62;">br</span><span style="color:#24292E;"> /</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">font</span><span style="color:#24292E;"> </span><span style="color:#032F62;">face=&quot;Arial, Helvetica, sans-serif&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size=&quot;1&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">href=&quot;http://who.godaddy.com/whoischeck.aspx?domain=NET.NET&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target=&quot;_blank&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">NET.NET</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">/</span><span style="color:#24292E;">a</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">first</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">best</span><span style="color:#24292E;"> </span><span style="color:#032F62;">domain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Internet!</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">br</span><span style="color:#24292E;"> /</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#6F42C1;">Coming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Soon...</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/font&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/center&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/body&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>So far we have only get the html page. If we want to see also the headers of our GET request and response headers, we have to user the <code>-v (--verbose)</code> option to get full information about the HTTP protocol.</p><div class="language-bash" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;">  </span><span style="color:#032F62;">http://www.net.net</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">   Trying 34.250.90.28:80...</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;"> TCP_NODELAY set</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;"> Connected to net.net (</span><span style="color:#6F42C1;">34.250.90.28</span><span style="color:#24292E;">) port 80 (#0)</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GET</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HTTP/1.1</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> Host: net.net</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> User-Agent: curl/7.68.0</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> Accept: </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">/</span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;"> Mark bundle as not supporting multiuse</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> HTTP/1.1 200 OK</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Cache-Control: private</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Content-Type: text/html</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Server: Microsoft-IIS/10.0</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Set-Cookie: ASPSESSIONIDASRSRRAR=IMFFLMBBBIFJNLNDHLOACDAI; path</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> X-Powered-By: ASP.NET</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Date: Mon, 04 Oct 2021 21:40:49 GMT</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> Content-Length: 1080</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">html</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">head&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">title&gt;NET.NET</span><span style="color:#24292E;"> [The </span><span style="color:#032F62;">first</span><span style="color:#24292E;"> </span><span style="color:#032F62;">domain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Internet!]</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">/titl</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">/head&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">...</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>In the previous output requests header are marked with <code>&gt;</code> while response header are marked with <code>&lt;</code>.</p><div class="custom-container info"><p class="custom-container-title">short and long command line options</p><p>Command line options pass on information to curl about how you want it to behave.</p><p>Single-letter options are convenient since they are quick to write and use, but as there are a limited number of letters and not all options are available like that. Long option names are therefore provided for those. Also, as a convenience and to allow scripts to become more readable, most short options have longer name aliases.</p><p>Short options are preceded by the minus symbol and a single letter immediately following it. They can be used with just that option name. You can then also combine several single-letter options after the minus.</p><blockquote><p>$&gt; curl -v -L http://example.com $&gt; curl -vL http://example.com</p></blockquote><p>Long options are always written with two dashes and then the name, and you can only write one option name per double-dash.</p><blockquote><p>$&gt; curl --verbose --location http://example.com</p></blockquote></div><p>Finally, we can access partially the verbose mode information using the <code>-i (--include)</code> or <code>-I (--head)</code> to get the complete answer from the server (headers &amp; data) or just the headers, respectively.</p><div class="language-bash" data-ext="sh"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#6F42C1;">$&gt;</span><span style="color:#24292E;">  </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-I</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://jsonplaceholder.typicode.com/todos/1</span></span>
<span class="line"><span style="color:#6F42C1;">HTTP/2</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span></span>
<span class="line"><span style="color:#6F42C1;">date:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Mon,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">04</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Oct</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2021</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">21</span><span style="color:#032F62;">:57:55</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GMT</span></span>
<span class="line"><span style="color:#6F42C1;">content-type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application/json</span><span style="color:#24292E;">; charset</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">utf-8</span></span>
<span class="line"><span style="color:#6F42C1;">content-length:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">83</span></span>
<span class="line"><span style="color:#6F42C1;">x-powered-by:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Express</span></span>
<span class="line"><span style="color:#6F42C1;">x-ratelimit-limit:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span></span>
<span class="line"><span style="color:#6F42C1;">x-ratelimit-remaining:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">999</span></span>
<span class="line"><span style="color:#6F42C1;">x-ratelimit-reset:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1631546224</span></span>
<span class="line"><span style="color:#6F42C1;">vary:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Origin,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Accept-Encoding</span></span>
<span class="line"><span style="color:#6F42C1;">access-control-allow-credentials:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">cache-control:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max-age=</span><span style="color:#005CC5;">43200</span></span>
<span class="line"><span style="color:#6F42C1;">pragma:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">no-cache</span></span>
<span class="line"><span style="color:#6F42C1;">expires:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-1</span></span>
<span class="line"><span style="color:#6F42C1;">x-content-type-options:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nosniff</span></span>
<span class="line"><span style="color:#6F42C1;">etag:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W/&quot;53-hfEnumeNh6YirfjyjaujcOPPT+s&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">via:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vegur</span></span>
<span class="line"><span style="color:#6F42C1;">cf-cache-status:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">HIT</span></span>
<span class="line"><span style="color:#6F42C1;">age:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10926</span></span>
<span class="line"><span style="color:#6F42C1;">accept-ranges:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bytes</span></span>
<span class="line"><span style="color:#6F42C1;">expect-ct:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max-age=</span><span style="color:#005CC5;">604800</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">report-uri=&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">report-to:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{&quot;endpoints&quot;:[{&quot;url&quot;:&quot;https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=LxJlkSosQdWmBFBOx1fB6zrbjSbU0iStl7jjtlVL27CtOEPxem%2Ffl9y%2BCajMUopcZINOEsaufiU8A2glOLEmNpO5a40%2FyWb%2B4dBuspS8VGWnCRW4jxBBmh%2F3FbupAEaxy66TUPariKJLqe3PL5iq&quot;}],&quot;group&quot;:&quot;cf-nel&quot;,&quot;max_age&quot;:604800}</span></span>
<span class="line"><span style="color:#6F42C1;">nel:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{&quot;success_fraction&quot;:0,&quot;report_to&quot;:&quot;cf-nel&quot;,&quot;max_age&quot;:604800}</span></span>
<span class="line"><span style="color:#6F42C1;">server:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cloudflare</span></span>
<span class="line"><span style="color:#6F42C1;">cf-ray:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6991</span><span style="color:#032F62;">ab2c1a5037c7-MAD</span></span>
<span class="line"><span style="color:#6F42C1;">alt-svc:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">h3=&quot;:443&quot;</span><span style="color:#24292E;">; ma</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">86400</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> h3-29</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;:443&quot;</span><span style="color:#24292E;">; ma</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">86400</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> h3-28</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;:443&quot;</span><span style="color:#24292E;">; ma</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">86400</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> h3-27</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;:443&quot;</span><span style="color:#24292E;">; ma</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">86400</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>Finally, adding the <code>-w &quot;%{time_total}\\n&quot;</code> will simply output the total time it took to fetch the response from the given domain.</p><h2 id="_2-4-2-endpoints-and-routes" tabindex="-1">2.4.2 Endpoints and routes</h2><p>The term endpoint is focused on the URL that is used to make a request.</p><p>For a typical web API, endpoints are URLs, and they are described in the API&#39;s documentation so programmers know how to use/consume them. For example, a particular web API may have this endpoint:</p><blockquote><p>GET https://my-api.com/Library/Books</p></blockquote><p>This would return a list of all books in the library.</p><p>A &quot;route&quot; is typically a part of URL endpoint that routes the pages to different components.</p><blockquote><p>GET https://my-api.com/Library/Books/341</p></blockquote><p>This would access book with id 341 using the Library/Books endpoint</p>`,25),v={href:"https://swapi.dev/",target:"_blank",rel:"noopener noreferrer"},A=s("code",null,"https://swapi.dev/api/",-1),q=p(`<p>Thus there are many routes depending on the information we want to access/add/modify/delete.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//swapi.dev/api/people/1</span></span>
<span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//swapi.dev/api/planet/3</span></span>
<span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//swapi.dev/api/vehicles</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-4-3-http-methods-and-headers" tabindex="-1">2.4.3 HTTP methods and headers</h2><p>In every HTTP request, there&#39;s a method. Sometimes called a verb. The most commonly used ones are GET, POST, HEAD and PUT.</p><p>POST is the HTTP method that was invented to send data to a receiving web application, and it is how most common HTML forms on the web works.</p><p>When the data is sent by a browser it will send it URL encoded, as a serialized name=value pairs separated with ampersand symbols (&amp;).</p><p>You send such data with curl&#39;s <code>-d (--data)</code> option like this:</p><blockquote><p>curl -d &#39;name=admin&amp;shoesize=12&#39; http://example.com/</p></blockquote><p>Curl selects which methods to use on its own depending on what action to ask for. -d will do POST, -I will do HEAD and so on. If you use the <code>-X (--request)</code> option you can change the method keyword curl selects.</p><blockquote><p>curl -X POST -d &#39;imageSize=big&amp;imageType=jpg&#39; http://example.org/</p></blockquote><p>POSTing with curl&#39;s -d option will make it include a default header that looks like <code>Content-Type: application/x-www-form-urlencoded</code>. That&#39;s what your typical browser will use for a plain POST.</p><p>If that header is not good enough for you, you should, of course, replace that and instead provide the correct one. Such as if you POST JSON to a server and want to more accurately tell the server about what the content is:</p><blockquote><p>curl -X &quot;POST&quot; -d &#39;{&quot;imageSize&quot;:&quot;big&quot;,&quot;imageType&quot;:&quot;jpg&quot;,&quot;scale&quot;:&quot;false&quot;}&#39; -H &#39;Content-Type: application/json&#39; https://example.com</p></blockquote><h2 id="_2-4-4-authentication" tabindex="-1">2.4.4 Authentication</h2><p>Each HTTP request can be made authenticated. If a server or a proxy wants the user to provide proof that they have the correct credentials to access a URL or perform an action, it can send back a HTTP response code that informs the client that it needs to provide a correct HTTP authentication header in the request to be allowed.</p><p>To tell curl to do an authenticated HTTP request, you use the <code>-u (--user)</code> option to provide user name and password (separated with a colon). Like this:</p><blockquote><p>curl --user daniel:secret http://example.com/</p></blockquote><p>This will make curl use the default &quot;Basic&quot; HTTP authentication method.</p><p>Many applications and services make use of a secret key or an Authorization token provided by the service provider when you create the service.</p>`,19),f={href:"https://developer.atlassian.com/cloud/trello/guides/rest-api/api-introduction/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://docs.microsoft.com/es-es/azure/cognitive-services/translator/reference/v3-0-translate",target:"_blank",rel:"noopener noreferrer"},D=p(`<p>If we want to use the Azure service for translate text, first we need to obtain the secret key and send it with each call to identify the user and get the permission to use the service.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#032F62;">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Ocp-Apim-Subscription-Key: &lt;here goes your susbcription key&gt;&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Content-Type: application/json; charset=UTF-8&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span></span>
<span class="line"><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;detectedLanguage&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;language&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;ca&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;score&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;translations&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Hello, how are you?&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">},{</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Ciao come stai?&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;it&quot;</span><span style="color:#24292E;">}]}]</span></span>
<span class="line"></span></code></pre></div><p>Sometimes we can get a temporal authorization by getting an Authorization token, that later must be provided to access the service during a short period of time. Once the time expires, another token must be requested. The <code>Authorization: Bearer &lt;token&gt;</code> header is used.</p><div class="language-java" data-ext="java"><pre class="shiki github-light" style="background-color:#fff;" tabindex="0"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#032F62;">&quot;https://api.cognitive.microsoft.com/sts/v1.0/issueToken&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Ocp-Apim-Subscription-Key: &lt;here goes the secret key&gt;&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d {}</span></span>
<span class="line"><span style="color:#24292E;">eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzM4OTcxMCwiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0.MFr7ka5azMv</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">2ZakpdJc6GIWAsp4SJKN6Hfe1LzmNJE</span></span>
<span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#032F62;">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Authorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzMwMTUxNywiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0.0hyyBNr22E2sIO_ZBlTiBePXM_KE_5hQOCeHxz3US44&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Content-Type: application/json; charset=UTF-8&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;error&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">401000</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;The request is not authorized because credentials are missing or invalid.&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#032F62;">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Authorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzM4OTcxMCwiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0.MFr7ka5azMv-2ZakpdJc6GIWAsp4SJKN6Hfe1LzmNJE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Content-Type: application/json; charset=UTF-8&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span></span>
<span class="line"><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;detectedLanguage&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;language&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;ca&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;score&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;translations&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Hello, how are you?&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;en&quot;</span><span style="color:#24292E;">},{</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Ciao come stai?&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;to&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;it&quot;</span><span style="color:#24292E;">}]}]</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br></div></div><h2 id="_2-4-5-references" tabindex="-1">2.4.5 References</h2>`,5),I={href:"https://everything.curl.dev/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.freecodecamp.org/news/how-to-start-using-curl-and-why-a-hands-on-introduction-ea1c913caaaa/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://curl.se/",target:"_blank",rel:"noopener noreferrer"};function z(L,x){const r=e("DownloadPDF-component"),c=e("DocumentCover-component"),l=e("router-link"),o=e("ExternalLinkIcon");return y(),u("div",null,[n(r),n(c,{titulo:"2.4 Annex I - Curl"}),h,s("nav",b,[s("ul",null,[s("li",null,[n(l,{to:"#_2-4-1-get-curl"},{default:t(()=>[a("2.4.1 Get curl")]),_:1})]),s("li",null,[n(l,{to:"#_2-4-2-calling-a-get-method"},{default:t(()=>[a("2.4.2 Calling a GET method")]),_:1})]),s("li",null,[n(l,{to:"#_2-4-2-endpoints-and-routes"},{default:t(()=>[a("2.4.2 Endpoints and routes")]),_:1})]),s("li",null,[n(l,{to:"#_2-4-3-http-methods-and-headers"},{default:t(()=>[a("2.4.3 HTTP methods and headers")]),_:1})]),s("li",null,[n(l,{to:"#_2-4-4-authentication"},{default:t(()=>[a("2.4.4 Authentication")]),_:1})]),s("li",null,[n(l,{to:"#_2-4-5-references"},{default:t(()=>[a("2.4.5 References")]),_:1})])])]),m,s("p",null,[a("You can always download the source from "),s("a",E,[a("CURL official site"),n(o)]),a(" or find binary packages to download from there.")]),s("ul",null,[g,s("li",null,[a("Windows 10 comes with the curl tool bundled with the operating system since version 1804 "),s("blockquote",null,[s("p",null,[a("download the latest official curl release for Windows from "),s("a",F,[a("curl windows binaries"),n(o)]),a(" and install that.")])])]),w]),C,s("p",null,[a("For instance, for "),s("a",v,[a("SWAPI (Star Wars API)"),n(o)]),a(" the endpoint is "),A,a(". That's the entry point for all requests.")]),q,s("p",null,[s("a",f,[a("Trello API Introduction"),n(o)])]),s("p",null,[s("a",T,[a("Azure Translator API Reference"),n(o)])]),D,s("p",null,[s("a",I,[a("Everything curl"),n(o)]),a(" is a detailed and totally free book available that explains basically everything there is to know about curl.")]),s("p",null,[s("a",k,[a("freecodecamp.org"),n(o)])]),s("p",null,[s("a",N,[a("curl official site"),n(o)])])])}const M=i(d,[["render",z],["__file","curl_annex.html.vue"]]);export{M as default};
